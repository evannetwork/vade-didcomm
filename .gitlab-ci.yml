image: rust:latest

stages:
  - build
  - test_unit

before_script:
  ##
  ## Install ssh-agent if not already installed, it is required by Docker.
  ## (change apt-get to yum if you use an RPM-based image)
  ##
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

  ##
  ## Run ssh-agent (inside the build environment)
  ##
  - eval $(ssh-agent -s)

  ##
  ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  ## We're using tr to fix line endings which makes ed25519 keys work
  ## without extra base64 encoding.
  ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
  ##
  - echo SSH_PRIVATE_KEY is "$SSH_PRIVATE_KEY"
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

  ##
  ## Create the SSH directory and give it the right permissions
  ##
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

  ##
  ## Collect SSH RSA public key from gitlab.com and add them to the known_hosts file
  ## 
  - ssh-keyscan -t rsa gitlab.com >> ~/.ssh/known_hosts

build:
  stage: build
  script:
    - apt-get update
    - apt-get install -y clang
    - cd ..
    - rm -rf vade
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@git.slock.it/equs/interop/vade/vade.git --branch develop
    - cd vade-didcomm
    - cargo build --release --verbose

test_unit:
  stage: test_unit
  script:
    - apt-get update
    - apt-get install -y clang
    - mkdir -p .git/hooks
    - cargo test --release
